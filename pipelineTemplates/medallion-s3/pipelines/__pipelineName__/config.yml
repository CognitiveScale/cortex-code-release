apiVersion: v3
kind: PipelineConfig
metadata:
  title: "Medallion S3 template"
  name: medallion_s3 # TODO(LA): Pipeline name needs to be dynamic (based on generate command)
spec:
  # Global Variables - defaults for all profiles
  variables:
    - name: OPEN_METADATA_REST_API
      value: http://openmetadata.cortex.svc.cluster.local:8585/api" # cluster internal API
    - name: DBT_EXECUTION_STRING
      value: build
  profiles:
    # Local Profile - for local usage. It uses a JDBC connection in the local catalog and sets an arbitrary value
    # for the OpenMetadata token because it is stubbed during tests as the service is not available
    - name: local
      variables:
        - name: PROJECT
          value: test-project
        - name: KAFKA_CONNECTION_NAME
          value: local-kafka
        - name: DATA_SOURCE_NAME
          value: test-datasource
        - name: PROFILE_NAME
          value: test-profileschema
        - name: MONGO_CONNECTION_NAME
          value: local-mongo
        - name: OPEN_METADATA_TOKEN
          value: 'xxxxx'
    # Default profile - for use in a Sensa cluster (use at your own risk).
    - name: default
      variables:
        - name: OPEN_METADATA_TOKEN
          value: '<REPLACE_ME>'
  blocks:
    - name: bronze
      title: Bronze From Kafka
      class: Test_Streaming_Bronze_Block
      package: test_streaming_bronze_block
      executor: pyspark
      type: streaming
      inputs:
        - name: from_kafka
          sensa:
            connection:
              project: ${PROJECT}
              name: ${KAFKA_CONNECTION_NAME}
      outputs:
        - name: to_bronze
          sensa:
            model:
              project: ${PROJECT}
              name: bronze
    - name: dbt_silver
      title: DBT Silver And Gold
      class: Test_Streaming_Silver_Block
      package: test_streaming_silver_block
      executor: pyspark
      type: dbt
      dbt:
        projectDir: dbt/mtn
        profileDir: dbt
        runCommand: ${DBT_EXECUTION_STRING}
      inputs:
        - name: from_bronze
          sensa:
            model:
              project: ${PROJECT}
              name: bronze
      outputs:
        - name: to_data_source
          sensa:
            dataSource:
              project: ${PROJECT}
              name: ${DATA_SOURCE_NAME}
        - name: to_profile_schema
          sensa:
            profile:
              project: ${PROJECT}
              name: ${PROFILE_NAME}
    - name: mongo
      title: Mongo Gold
      class: Test_Streaming_Mongo_Block
      package: test_streaming_mongo_block
      executor: pyspark
      type: streaming
      inputs:
        - name: from_profile_schema
          sensa:
            profile:
              project: ${PROJECT}
              name: ${PROFILE_NAME}
      outputs:
        - name: to_mongo_checkpoint
          sensa:
            model:
              project: ${PROJECT}
              name: mongo
